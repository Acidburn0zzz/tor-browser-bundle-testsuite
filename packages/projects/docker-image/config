# vim: filetype=yaml sw=2
filename: '[% sha256(c("pre")).substr(0, 12) %]'
remote_docker: 1
docker_image_prefix: 'tbb-testsuite_[% GET ENV.RBM_BUILDNAME ? ENV.RBM_BUILDNAME : ENV.USER ? ENV.USER : c("uid") %]'
docker_save_image: '[% c("docker_image_prefix") %]:[% c("filename") %]'
pkg_type: build

docker_image: '[% c("lsb_release/id").lower %]:[% c("lsb_release/release") %]'

lsb_release:
  id: '[% pc(c("origin_project", { no_distro => 1 }), "lsb_release/id", { no_distro => 1 }) %]'
  release: '[% pc(c("origin_project", { no_distro => 1 }), "lsb_release/release", { no_distro => 1 }) %]'
  codename: '[% pc(c("origin_project", { no_distro => 1 }), "lsb_release/codename", { no_distro => 1 }) %]'

pre: |
  #!/bin/sh
  # [% c('docker_image') %]
  set -e
  [% IF c('lsb_release/release') == '14.10' -%]
  sed -i 's/archive\.ubuntu\.com/old-releases.ubuntu.com/' /etc/apt/sources.list
  [% END -%]
  [% IF pc(c('origin_project'), 'var/pre_pkginst') -%]
  [% pc(c('origin_project'), 'var/pre_pkginst') %]
  [% END -%]
  [% IF c('lsb_release/id') == 'Ubuntu' || c('lsb_release/id') == 'Debian' %]
  apt-get update -y
  apt-get upgrade -y
  [% END %]
  [%
     deps = [];
     IF pc(c('origin_project'), 'var/deps');
       CALL deps.import(pc(c('origin_project'), 'var/deps').sort);
     END;
     IF pc(c('origin_project'), 'var/arch_deps');
       CALL deps.import(pc(c('origin_project'), 'var/arch_deps').sort);
     END;
     IF deps.size;
       FOREACH pkg IN deps;
         SET p = tmpl(pkg);
         IF p;
           GET c('install_package', { pkg_name => p });
           GET "\n";
         END;
       END;
     END;
  -%]
  [% IF pc(c('origin_project'), 'var/post_pkginst') -%]
  [% pc(c('origin_project'), 'var/post_pkginst') %]
  [% END -%]
